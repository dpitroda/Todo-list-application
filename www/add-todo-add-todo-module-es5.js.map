{"version":3,"sources":["webpack:///src/app/add-todo/add-todo.page.html","webpack:///src/app/add-todo/add-todo-routing.module.ts","webpack:///src/app/add-todo/add-todo.module.ts","webpack:///src/app/add-todo/add-todo.page.scss","webpack:///src/app/add-todo/add-todo.page.ts"],"names":["routes","path","component","AddTodoPageRoutingModule","imports","forChild","exports","AddTodoPageModule","declarations","AddTodoPage","toastCtrl","navCtrl","todo_owner","currentUser","uid","collection","add","title","todo_title","description","todo_description","last_date","Date","todo_last_date","owner","status","created","FieldValue","serverTimestamp","then","docRef","create","message","duration","toast","present","back","err","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,wBAAwB;AAAA;AAAA,O;;AAAxBA,8BAAwB,6DAJpC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIoC,GAAxBH,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJb,UAAMH,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAgBaK,iBAAiB;AAAA;AAAA,O;;AAAjBA,uBAAiB,6DAT7B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,iFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,0DAAD;AAPN,OAAT,CAS6B,GAAjBD,iBAAiB,CAAjB;;;;;;;;;;;;;;;;AC5Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+ECIf;;;UAQaE,WAAW;AAOtB,6BAAoBC,SAApB,EAAwDC,OAAxD,EAAgF;AAAA;;AAA5D,eAAAD,SAAA,GAAAA,SAAA;AAAoC,eAAAC,OAAA,GAAAA,OAAA;AACpD,eAAKC,UAAL,GAAkB,gDAAgBC,WAAhB,CAA4BC,GAA9C;AACD;;AATmB;AAAA;AAAA,qCAWX,CACV;AAZqB;AAAA;AAAA,oCAcZ;AAAA;;AAEN,iEAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6C;AAC3CC,mBAAK,EAAE,KAAKC,UAD+B;AAE3CC,yBAAW,EAAE,KAAKC,gBAFyB;AAG3CC,uBAAS,EAAE,IAAIC,IAAJ,CAAS,KAAKC,cAAd,CAHgC;AAI3CC,mBAAK,EAAE,KAAKZ,UAJ+B;AAK3Ca,oBAAM,EAAE,YALmC;AAM3CC,qBAAO,EAAE,mDAAmBC,UAAnB,CAA8BC,eAA9B;AANkC,aAA7C,EAOGC,IAPH,CAOQ,UAACC,MAAD,EAAY;AAClB,mBAAI,CAACpB,SAAL,CAAeqB,MAAf,CAAsB;AACpBC,uBAAO,EAAE,sBADW;AAEpBC,wBAAQ,EAAE;AAFU,eAAtB,EAGGJ,IAHH,CAGQ,UAACK,KAAD,EAAW;AACjBA,qBAAK,CAACC,OAAN;;AACA,qBAAI,CAACxB,OAAL,CAAayB,IAAb;AACD,eAND;AAQD,aAhBD,WAgBS,UAACC,GAAD,EAAS;AAChB,mBAAI,CAAC3B,SAAL,CAAeqB,MAAf,CAAsB;AACpBC,uBAAO,EAAEK,GAAG,CAACL,OADO;AAEpBC,wBAAQ,EAAE;AAFU,eAAtB,EAGGJ,IAHH,CAGQ,UAACK,KAAD,EAAW;AACjBA,qBAAK,CAACC,OAAN;AAED,eAND;AAQD,aAzBD;AA0BH;AA1CqB;;AAAA;AAAA,S;;;;gBATf;;gBAAiB;;;;AASb1B,iBAAW,6DALvB,gEAAU;AACT6B,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,kGAFS;;;;AAAA,OAAV,CAKuB,GAAX9B,WAAW,CAAX","file":"add-todo-add-todo-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"danger\\\">\\n    <ion-back-button color=\\\"light\\\"></ion-back-button>\\n    <ion-title>Add new todo list</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <ion-list>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">ToDo Title </ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"todo_title\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">ToDo Description </ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"todo_description\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">ToDo Last Date </ion-label>\\n      <ion-datetime min=\\\"2019\\\" display-format=\\\"MM/DD/YYYY\\\" [(ngModel)]=\\\"todo_last_date\\\"></ion-datetime>\\n    </ion-item>\\n\\n  </ion-list>\\n\\n  <ion-button expand=\\\"block\\\" shape=\\\"round\\\" color=\\\"danger\\\" (click)=\\\"addTodo()\\\">Add ToDo</ion-button>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddTodoPage } from './add-todo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddTodoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddTodoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddTodoPageRoutingModule } from './add-todo-routing.module';\n\nimport { AddTodoPage } from './add-todo.page';\nimport { Route } from '@angular/compiler/src/core';\nimport { Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddTodoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AddTodoPageRoutingModule\n  ],\n  declarations: [AddTodoPage]\n})\nexport class AddTodoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC10b2RvL2FkZC10b2RvLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\nimport * as firebase from 'firebase';\nimport { ToastController, NavController } from '@ionic/angular';\n//import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n\n@Component({\n  selector: 'app-add-todo',\n  templateUrl: './add-todo.page.html',\n  styleUrls: ['./add-todo.page.scss'],\n})\nexport class AddTodoPage implements OnInit {\n\n  todo_title: string;\n  todo_description: string;\n  todo_last_date: Date;\n  todo_owner: string;\n\n  constructor(private toastCtrl: ToastController, private navCtrl: NavController) { \n      this.todo_owner = firebase.auth().currentUser.uid;\n    }\n\n  ngOnInit() {\n  }\n\n  addTodo() {\n\n      firebase.firestore().collection(\"todos\").add({\n        title: this.todo_title,\n        description: this.todo_description,\n        last_date: new Date(this.todo_last_date),\n        owner: this.todo_owner,\n        status: \"incomplete\",\n        created: firebase.firestore.FieldValue.serverTimestamp()\n      }).then((docRef) => {\n        this.toastCtrl.create({\n          message: \"ToDo has been added!\",\n          duration: 2000\n        }).then((toast) => {\n          toast.present();\n          this.navCtrl.back();\n        })\n\n      }).catch((err) => {\n        this.toastCtrl.create({\n          message: err.message,\n          duration: 2000\n        }).then((toast) => {\n          toast.present();\n          \n        })\n\n      })\n  }\n}\n"]}